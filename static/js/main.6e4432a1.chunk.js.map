{"version":3,"sources":["components/Header/Header.js","components/Folder/Folder.js","NoteContext.js","components/FolderList/FolderList.js","components/Sidebar/Sidebar.js","config.js","components/AddFolder/AddFolder.js","components/AddNote/AddNote.js","components/Note/Note.js","components/NoteList/NoteList.js","components/FullNote/FullNote.js","errorBoundaries/FolderError.js","App.js","index.js"],"names":["Header","className","to","Component","Folder","this","props","name","NoteContext","React","createContext","folders","notes","addFolder","addNote","deleteNote","handleDeleteNote","FolderList","context","map","folder","key","id","contextType","Sidebar","API_ENDPOINT","AddFolder","state","action","config","method","htmlFor","type","AddNote","target","required","Note","handleClickDelete","e","preventDefault","noteId","data","fetch","headers","then","res","ok","console","log","json","catch","err","modified","onClick","NoteList","note","folderId","FullNote","history","push","displayNote","content","defaultProps","match","params","FolderError","hasError","error","children","App","newList","filter","setState","contextValue","Provider","value","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6e4432a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport './Header.css'\n\nclass Header extends Component {\n    render(){\n        return (\n            <header className='header'>\n              <Link to='/'>\n                <h1>Noteful</h1>\n              </Link>\n            </header>\n          );\n    }\n  \n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport './Folder.css'\n\nclass Folder extends Component {\n    render(){\n        return (\n            <div className='folder'>\n              <h3>{this.props.name}</h3>\n            </div>\n          );\n    }\n  \n}\n\nexport default Folder;\n\nFolder.propTypes = {\n  name: PropTypes.string.isRequired\n}\n\n\n","import React from 'react'\n\nconst NoteContext = React.createContext({\n    folders: [],\n    notes: [],\n    addFolder: () => {},\n    addNote: () => {},\n    deleteNote: () => {},\n    handleDeleteNote: () => {}\n})\n\nexport default NoteContext","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport Folder from '../Folder/Folder'\nimport './FolderList.css'\nimport NoteContext from '../../NoteContext'\n\nclass FolderList extends Component {\n    static contextType = NoteContext;\n    render(){\n        const contextFolders = this.context.folders;\n\n        const folders = contextFolders.map(folder => {\n            return (\n                <li key={folder.id}>\n                    <Link to={`/folder/${folder.id}`}>\n                        <Folder \n                            name={folder.name}\n                        />\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <div className='folder-list'>\n              <ul>\n                  {folders}\n              </ul>\n                  <Link to='add-folder'>\n                    <button>Add Folder</button>\n                  </Link>\n            </div>\n          );\n    }\n  \n}\n\nexport default FolderList;\n\n","import React, { Component } from 'react';\nimport './Sidebar.css'\nimport FolderList from '../FolderList/FolderList'\n\nclass Sidebar extends Component {\n    render(){\n        return (\n            <aside className='header'>\n              <FolderList />\n            </aside>\n          );\n    }\n  \n}\n\nexport default Sidebar;","export default {\n    API_ENDPOINT: 'http://localhost:9090'\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport './AddFolder.css'\nimport config from '../../config'\nimport NoteContext from '../../NoteContext'\n\n\nclass AddFolder extends Component {\n\n    static contextType = NoteContext;\n\n    state = {\n        folders: {}\n      }\n\n    // handleAddName = (name) => {\n    //     this.setState({\n    //         folders: {\n    //             name: name\n    //         }\n    //     })\n    // }\n\n    // handleClickAdd = (e) => {\n    //     e.preventDefault();\n    //     const contextFolders = this.context.folders;\n    //     console.log(contextFolders)\n    //     fetch(`${config.API_ENDPOINT}/folders`, {\n    //         method: 'POST',\n    //         headers: {\n    //           'content-type': 'application/json'\n    //         },\n    //       })\n    //       .then(res => {\n    //         if(!res.ok){\n    //           console.log('not okay')\n    //         }\n    //         return res.json();\n    //       })\n    //       .then((data) => {\n    //           console.log(data)\n    //           this.setState({\n    //               folders: {\n    //                   id: data.id,\n    //                   name: title\n    //               }\n    //           })\n    //           console.log(this.state.folders)\n    //       })\n    //       .catch(err => {\n    //         console.log(err)\n    //       })\n\n    //       this.props.value.history.push('/');\n    // }\n\n    render(){\n        return (\n            <div className='add-folder'>\n                <div className='inner-content'>\n                    <h1>Add New Folder</h1>\n                    <form \n                        action={`${config.API_ENDPOINT}/folders`}\n                        method='POST'\n                    >\n                        <label htmlFor='name'>Name</label>\n                        <input \n                            name='name' \n                            type='text'\n                            // onChange={(e) => this.handleAddName(e.target.value)}\n                        />\n                        <input type='submit'></input>\n                    </form>\n                    <Link to='/'>\n                        <button className='back-button'>Back</button>\n                    </Link>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddFolder","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport './AddNote.css'\nimport config from '../../config'\n\nclass AddNote extends Component {\n    render(){\n        return (\n            <div className='add-note'>\n                <div className='inner-content'>\n                    <h1>Add New Note</h1>\n                    <form\n                        target=\"_blank\"\n                        action={`${config.API_ENDPOINT}/notes`}\n                        method='POST'\n                    >\n                        <label htmlFor='name'>Name</label>\n                        <input name='name' type=\"text\" required></input>\n                        <label htmlFor='content'>Content</label>\n                        <textarea name='content'></textarea>\n                        <label htmlFor='folder'>Folder</label>\n                        <input name='folder' type=\"text\"></input>\n                        <input type='submit'></input>\n                    </form>\n                    <Link to='/'>\n                        <button className='back-button'>Back</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddNote","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport './Note.css'\nimport NoteContext from '../../NoteContext'\nimport config from '../../config'\n\n\n\nclass Note extends Component{\n  static contextType = NoteContext;\n\n\n  handleClickDelete = e => {\n    e.preventDefault();\n    const noteId = this.props.data.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n    .then(res => {\n      if(!res.ok){\n        console.log('not okay')\n      }\n      return res.json();\n    })\n    .then(() => {\n      this.context.deleteNote(noteId)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n\n  }\n\n\n  render() {\n        return (\n        <li className='note'>\n          <Link to={`/note/${this.props.data.id}`}>\n            <h4>{this.props.name}</h4>\n          </Link>\n            <p>Last Modified on {this.props.modified}</p>\n            <button onClick={this.handleClickDelete}>Delete</button>\n        </li>\n        );\n  }\n  \n}\n\nexport default Note;\n\nNote.propTypes = {\n  data: PropTypes.object,\n  handleDeleteNote: PropTypes.func,\n  modified: PropTypes.string,\n  name: PropTypes.string.isRequired\n}","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom'\nimport './NoteList.css'\nimport Note from '../Note/Note'\nimport NoteContext from '../../NoteContext'\n\n\nclass NoteList extends Component{\n\n    static contextType = NoteContext;\n   \n  \n\n  render() {\n      const contextNotes = this.context.notes;\n        const notes = contextNotes.map(note => {\n            if (!this.props.folderId) {\n                return (\n                    <Fragment key={note.id}>\n                    <Note \n                        id={note.id}\n                        data={note}\n                        name={note.name}\n                        modified={note.modified}\n                        handleDeleteNote={this.handleDeleteNote}\n                    />\n                    </Fragment>\n                )\n            } else if (note.folderId === this.props.folderId) {\n                return (\n                    <Fragment key={note.id}>\n                    <Note \n                        data={note}\n                        name={note.name}\n                        modified={note.modified}\n                        handleDeleteNote={this.handleDeleteNote}\n                    />\n                    </Fragment>\n                )\n            } \n        })\n        \n        return (\n        <main className='main'>\n            <div className='note-list'>\n                <ul>\n                    {notes}\n                </ul>\n\n                <Link to='/add-note'>\n                    <button>Add Note</button>\n                </Link>\n            </div>\n            \n        </main>\n        );\n  }\n  \n}\n\nexport default NoteList;","import React, { Component} from 'react';\nimport { Link } from 'react-router-dom'\nimport './FullNote.css'\nimport NoteContext from '../../NoteContext'\nimport config from '../../config'\n\n\nclass FullNote extends Component{\n  static defaultProps = {\n    match: {\n        params: {\n\n        }\n    }\n}\n\n  static contextType = NoteContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push('/');\n  }\n\n  handleClickDelete = e => {\n    e.preventDefault();\n    const noteId = this.props.noteId\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n    .then(res => {\n      if(!res.ok){\n        console.log('not okay')\n      }\n      return res.json();\n    })\n    .then(() => {\n      this.context.deleteNote(noteId)\n      this.handleDeleteNote(noteId)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n\n  }\n\n  render() {\n        const notes = this.context.notes;\n        const displayNote = notes.map(note => {\n          if (this.props.noteId === note.id){\n            return (\n              <div className='full-note' key={note.id}>\n                <h2>{note.name}</h2>\n                <p>Last Modified on {note.modified}</p>\n                <p>{note.content}</p>\n                <Link to='/'>\n                    <button>Back</button>  \n                </Link>\n                <button onClick={this.handleClickDelete}>Delete</button>\n              </div>\n            )\n          }\n        })\n        return (\n        <li>\n          {displayNote}\n        </li>\n        );\n  }\n  \n}\n\nexport default FullNote;","import React, { Component } from 'react'\n\nclass FolderError extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n\n    static getDerivedStateFromError(error){\n        return { hasError: true }\n    }\n\n    render(){\n        if(this.state.error) {\n            return (\n                <div>Uable to load folders</div>\n            )\n        }\n        return this.props.children\n        }\n       \n}\n\nexport default FolderError","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Header from './components/Header/Header'\nimport Sidebar from './components/Sidebar/Sidebar'\nimport AddFolder from './components/AddFolder/AddFolder'\nimport AddNote from './components/AddNote/AddNote'\nimport NoteList from './components/NoteList/NoteList'\nimport FullNote from './components/FullNote/FullNote'\nimport NoteContext from './NoteContext'\nimport FolderError from './errorBoundaries/FolderError'\nimport config from './config'\n\n\nclass App extends Component{\n  state = {\n    folders: [],\n    notes: []\n  }\n\n  componentDidMount(){\n    //call API for folders data\n    fetch(`${config.API_ENDPOINT}/folders`)\n    .then(res => {\n      if(!res.ok){\n        console.log('not okay')\n      }\n      return res.json();\n    })\n    .then(data => {\n      this.setState({\n        folders: data\n      })\n    })\n    .catch(err => {\n      console.log(err)\n    })\n    \n    //call API for notes data\n    fetch(`${config.API_ENDPOINT}/notes`)\n    .then(res => {\n      if(!res.ok){\n        console.log('not okay')\n      }\n      return res.json();\n    })\n    .then(data => {\n      this.setState({\n        notes: data\n      })\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  deleteNote = noteId => {\n      const newList = this.state.notes.filter(note => {\n        return note.id !== noteId\n      })\n      this.setState({\n        notes: newList\n      })\n  }\n\n\n  render() {\n    const contextValue = {\n      folders: this.state.folders,\n      \n      notes: this.state.notes,\n      deleteNote: this.deleteNote,\n    }\n    return (\n      <div className='App'>\n        <NoteContext.Provider value={contextValue}>\n          <Header />\n          \n          <Switch>\n            <Route \n              exact path='/'\n              render={() => {\n                  return (\n                  <div>\n                    <FolderError>\n                      <Sidebar />\n                    </FolderError>\n                    <NoteList />\n                  </div>\n                  )\n                }}\n              />\n            <Route \n              path='/add-folder'\n              render={() => \n                <div>\n                  <AddFolder />\n                </div>\n              }\n            />\n            {/* need to combine this and above routes - still need to figure out how */}\n            <Route \n              path='/folder/add-folder'\n              render={() => \n                <div>\n                  <AddFolder />\n                </div>\n              }\n            />\n            <Route \n              path='/add-note'\n              render={() => \n                <div>\n                  <AddNote />\n                </div>\n              }\n            />\n            <Route \n              path='/note/:id'\n              render={(history) => {\n                const noteId = history.match.params.id;\n                return (\n                  <FullNote \n                    noteId={noteId}\n                  />\n                )\n              }\n                \n              }\n            />\n            <Route \n              path='/folder/:id'\n              render={(history) => {\n                const id = history.match.params.id;\n                return (\n                <div>\n                  <Sidebar />\n                  <NoteList\n                    folderId={id}\n                  />\n                </div>\n                )}}\n            />\n          </Switch>\n        </NoteContext.Provider>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\ndocument.getElementById('root'));"],"sourceRoot":""}